<beans xmlns = "http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:wf="http://www.springframework.org/schema/webflow-config"
    xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation = "
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/webflow-config 
    http://www.springframework.org/schema/webflow-config/spring-webflow-config.xsd
    ">
   
   <context:component-scan base-package="am.fourTrade.onlineShopping"></context:component-scan>
   <context:component-scan base-package="am.fourTrade.shoppingBackend"></context:component-scan>

   
   <bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
   </bean>
   
   <!-- for uploading images(id must be multipartResolver) -->
   <bean id="multipartResolver" 
   		class="org.springframework.web.multipart.support.StandardServletMultipartResolver"/>
   
   <!-- Loading static resources -->
   <mvc:annotation-driven />
   
   <!-- The place of static resources -->
   <mvc:resources location="/assets/" mapping="/resources/**" />
   
   <!-- Spring WebFlow configuration  -->
   <!-- Add the flow-executor that will handle the flow indicating the entry point in the project -->
   <!-- Entry Point for the FLOW -->
	<wf:flow-executor id="flowExecutor" flow-registry="flowRegistry"/>
	
	<!-- Add the flow-registry for finding the flows of the application -->
	<wf:flow-registry id="flowRegistry" base-path="/WEB-INF/views/flows"
	flow-builder-services="flowBuilderServices"
	>	
		<wf:flow-location-pattern value="/**/*-flow.xml" />
	</wf:flow-registry>
	
	<!-- for resolving the view -->	
	 <wf:flow-builder-services id="flowBuilderServices" 
	 		view-factory-creator="viewFactoryCreator" />
	
	<!--Spring WebFlow provides a Spring MVC handler adapter called FlowHandlerAdapter. 
	This handler adapter is the bridge between DispatcherServlet and the flow executor,
	handling request and manipulating the flow based on those requests -->	
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor"></property>
	</bean>
	
	<!-- DispatcherServelet knows how to dispatch requests by consulting with one or more
	handler mappings. For web flows, FlowHandlerMapping helps DispatcherServlet know to send
	flow requests to the FlowHandlerAdapter -->
	<!-- This will give a priority to webflow in situations if we add controller with register mapping -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="flowRegistry" ref="flowRegistry"></property>
		<property name="order" value="-1"></property>
	</bean>
   
   <!-- Will help to resolve the view  -->
   <bean id="viewFactoryCreator"
		class="org.springframework.webflow.mvc.builder.MvcViewFactoryCreator">
		<property name="viewResolvers" ref="viewResolver"></property>
	</bean>
   
   
   
</beans>